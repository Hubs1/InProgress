@model IEnumerable<EmsEntities.DepartmentEntities>
@{
    ViewBag.Title = "Department Server Side Records";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/bootstrapDataTablesCss")
<style>
    #alerterror {
        font-style: oblique;
        font-variant: small-caps;
        font-weight: bolder;
        font-size: larger;
    }
</style>

<h2>Department Records</h2>

@if (@TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible" id="success">
        <a href="#" class="close" data-dismiss="alert" aria-label="close" style="color:red">&times;</a>
        <p style="text-align:center"><strong>Success!</strong> @TempData["Success"]. </p>
    </div>
}
else if (@TempData["Update"] != null)
{
    <div class="alert alert-success alert-dismissible" id="success">
        <a href="#" class="close" data-dismiss="alert" aria-label="close" style="color:red">&times;</a>
        <p style="text-align:center"><strong>Success!</strong> @TempData["Update"]. </p>
    </div>
}
else if (@TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible" id="danger">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <p id="error" style="text-align:center"><strong>OOPS!</strong> An error occurred while processing your request. <b>"@TempData["Error"]"</b> </p>
    </div>
}

<div class="alert alert-danger alert-dismissible" id="alerterror" style="display:none;text-align:center;">
    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
    <p id="msg"> </p>
</div>

<div class="pull-left">
    <button class="btn btn-danger" id="buttonAlert" style="display:none">DeleteAll</button>
</div>
<div class="pull-right">
    @Html.ActionLink("Create New", "Create", "Department", new { @class = "btn btn-primary" })
</div>
<br />
<br />
<div id="checkboxes">
    <table class="table table-striped table-bordered" id="tblDepartment" style="width:100%">
        <thead>
            <tr>
                <td>
                    @*<input type="checkbox" id="checkall"/>*@
                </td>
                <th>Name
                </th>
                <th>Code
                </th>
                <th style="text-align:left">Active
                </th>
                <th>Employee Names
                </th>
                <td><b>Actions</b>
                </td>
            </tr>
        </thead>
    </table>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryDataTable")
    @Scripts.Render("~/bundles/bootbox")
    @Scripts.Render("~/bundles/bootstrapDataTables")
    <script>
        $(document).ready(function () {
            getDepartments();

            // Grab a reference to the check all box:
            var checkAllBox = $("#checkall");
            //Set the default value of the global checkbox to true: checkAllBox.prop('checked', true);

            // Attach the call to toggleChecked to the click event of the global checkbox:
            checkAllBox.click(function () {
                var status = checkAllBox.prop('checked');
                toggleChecked(status);
            });

            alertClose();
        });

        function getDepartments() {
            // Setup - add a text input to each footer cell
            $('#tblDepartment thead th').each(function () {
                var title = $('#example thead th').eq($(this).index()).text();
                $(this).append('<span style="float: left;"><input type="text" placeholder="Search:"/></span>');
            });

            var table = $('#tblDepartment').DataTable(
                {
                    //"ordering": false,
                    "processing": true, // for show progress bar
                    "serverSide": true, // for process server side
                    "filter": true, // this is for disable filter (search box)
                    "pageLength": 10,
                    //"paging": true,
                    "destroy": true,
                    "ajax": { //ajax:to get or retrieve datas to populate HTML table
                        "url": "/Department/GetServerSide",
                        //"url": "/Department/GetServerSideCopy",
                        "type": "POST",
                        "datatype": "json"
                    },
                    "columns": [ //columns: it tells what columns associated with each bind column
                        {
                            data: null,
                            targets: 0,
                            orderable: false,
                            searchable: false,
                            className: 'text-center',
                            render: function (data, type, row) {
                                return '<input type="checkbox" id="chk" data-department-chkid="' + data.Id + '">';
                            }
                        },
                        //{
                        //    "data": "Id",
                        //    "title": "Serial",
                        //},
                        { "data": "Name" },
                        { "data": "Code" },
                        {
                            "data": "Active",
                            //orderable: false,
                            className: "text-center",
                            render: function (data, type, row) {
                                if (data === true) {
                                    return '<span class="glyphicon glyphicon-ok" style="color:green;text-decoration:none;"></span>';
                                }
                                else
                                    return '<span class="glyphicon glyphicon-remove" style="color:red;text-decoration:none;"></span>';
                            }
                        },
                        {
                            "data": "EmployeeNames",
                        },
                        {
                            data: null,
                            orderable: false,
                            className: "text-center",
                            render: function (data, type, row) {
                                return '<a id="lnkEditUser" data-user-id="' + data.Id + '" href="#" title="Edit User" class="glyphicon glyphicon-edit" style="text-decoration:none;"></a>' +
                                    '<a id = "lnkDeleteUser" data-user-id="' + data.Id + '" href="#"  title="Delete User" class="glyphicon glyphicon-trash" style="padding-left:10px; text-decoration:none;"></a> ';
                            }
                        }
                    ],
                    'order': [
                        [1, 'asc']
                    ],
                });

            // Apply the search
            table.columns().every(function () {
                var that = this;

                $('input', this.header()).on('keyup change', function () {
                    that
                        .search(this.value)
                        .draw();
                });
            });
        }

        $(document).on('click', '#lnkEditUser', function (e) {
            window.location.href = '@Url.Action("Edit", "Department")?id=' + $(this).data('user-id');
        })

        $(document).on('click', '#lnkDeleteUser', function () {
            var departmentId = $(this).data('user-id');
            bootbox.confirm("Are you sure to delete record ?", function (result) {
                if (result) {
                    deleteDepartment(departmentId);
                }
            });
        })
            function deleteDepartment(departmentId) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete")',
                //data: JSON.stringify({ id: departmentId }), //use id here
                data: JSON.stringify({ Ids: departmentId }), //use Ids declare in DepartmentController Delete() action method
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data.success) {
                        bootbox.alert('Department record deleted successfully.');
                        getDepartments();
                    }
                    else {
                        alerterror.style.display = "block";
                        bootbox.alert(data.error);
                        $("#msg").html(data.error);
                        $("#alerterror").fadeOut(25000);
                    }
                },
                error: function (xhr, status, error) {
                    alert('hi departmentId ' + departmentId +'.\nAction cancelled'+ error);
                }
            });
        }

            function toggleChecked(status) {
                $("#checkboxes input").each(function () { // toggle selection using <div id=checkboxes/>
                    // Set the checked status of each to match the
                    // checked status of the check all checkbox:
                    $(this).prop("checked", status);
                });
            }

            $(document).on('click', '#buttonAlert', function () {
                //Create an Array.
                var selected = new Array();
                var departmentIds; //Global variable

                //Reference the CheckBoxes and insert the checked CheckBox value in Array.
                $("#tblDepartment input[type=checkbox]:checked").each(function () {
                    //id = $(this).parent('td').closest('td').next().text();
                    id = $(this).data('department-chkid');
                    selected.push(id);

                });
                //Display the selected CheckBox values.
                if (selected.length > 0) {
                    alert("Selected values: " + selected.join(","));
                    departmentIds = selected.join(",");
                }
                bootbox.confirm("Are you sure to delete records ?", function (result) {
                    if (result) {
                        //deleteDepartments(departmentIds);
                        deleteDepartment(departmentIds);
                        buttonAlert.style.display = "none";
                        $("#checkall").prop("checked", false);

                        //Uncheck tbody checkbox id="chk" after confirm.
                        $('tbody input[id="chk"]').prop("checked", false);
                    }
                });
            })

            //Display no. of checkbox selected in alert
            function chkbtn() {
                var chkcount = $('tbody input[id="chk"]:checked').length;
                //alert(chkcount);
                if (chkcount > 1) {
                    buttonAlert.style.display = "block";
                    //$("#buttonAlert").hide(15000);
                    //$("#buttonAlert").fadeOut(50000);
                }
                else
                    buttonAlert.style.display = "none";
            }

            //Display DeleteAll button when checkbox(id=checkall) is checked or vice versa [top checkall]
            $("#tblDepartment input:checkbox").on("change", function () {
                var checkBox = document.getElementById("checkall");
                if (checkBox == true)
                    buttonAlert.style.display = "block";
                else
                    buttonAlert.style.display = "none";
                chkbtn();
            });

            //Display DeleteAll button when checkbox count > 1
            $(document).on('click', '#chk', function () {
                chkbtn();
            })

            function alertClose() {
                window.setTimeout(function () {
                    $("#success").alert('close');
                }, 10000);
                window.setTimeout(function () {
                    $("#danger").alert('close');
                }, 20000);
            }
    </script>
}