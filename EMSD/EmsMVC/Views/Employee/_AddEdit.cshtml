@model EmsEntities.EmployeeEntities
@Html.AntiForgeryToken()
<div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.DepartmentId, (SelectList)@ViewBag.DepartmentList, "Select Department", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10 radio">
        @*@Html.RadioButtonFor(model => model.Gender,"Male")*@ @*Runtime Error(Store and display value mismatch)*@
        @*@Html.RadioButtonFor(m => m.Gender, "M", new { @checked = 'M' }) : M*@ @*Remove error value name and html attribute must be same ["M"=='M']*@
        <label>
            @Html.RadioButtonFor(model => model.Gender, "True", new { @checked = true })
            Male
        </label>
        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
        @*@Html.RadioButtonFor(model => model.Gender,"Female")*@
        @*@Html.RadioButtonFor(m => m.Gender, "F") : F*@
        <label>
            @Html.RadioButtonFor(model => model.Gender, "False")
            Female
        </label>
        <br>
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.JobType, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.JobType, (SelectList)@ViewBag.JobList, "Select MyType", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.JobType, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10 checkbox">
        <label>@Html.CheckBox("Active")</label>
        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
    </div>
</div>
@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@